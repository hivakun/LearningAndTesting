<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/data/jpa
        http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task-3.0.xsd">

    <context:property-placeholder location="classpath:config.properties"/>

    <!-- Considera a estrutura de pacote para percorrer classes com as anotacoes de 
    	 injecao de dependencia do Spring como: @Component, @Repository e @Service -->
    <context:annotation-config/>
    <context:component-scan base-package="br.com.daydream"/>

    <!-- Converte as excecoes de persistencia para o padrao Spring -->
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${db.driver}"/>
        <property name="jdbcUrl" value="${db.url}"/>
        <property name="user" value="${db.user}"/>
        <property name="password" value="${db.password}"/>

        <property name="initialPoolSize" value="${db.pool.initialSize:1}"/>
        <property name="maxPoolSize" value="${db.pool.maxSize:10}"/>
        <property name="acquireIncrement" value="1"/>
        <property name="acquireRetryAttempts" value="${db.pool.maxRetryAttempts:10}"/>
        <property name="maxIdleTime" value="${db.pool.maxIdleTime:120}"/>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="dataSource"/>
    </bean>

    <bean id="applicationBean" class="br.com.daydream.Application"/>

    <!-- Define as configuracoes JPA (persistence.xml) -->
    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="true"/>
                <property name="generateDdl" value="true"/>
                <property name="databasePlatform" value="${db.dialect}"/>
            </bean>
        </property>
        <property name="packagesToScan">
            <list>
                <value>br.com.daydream</value>
            </list>
        </property>
        <property name="persistenceUnitName" value="persistenceUnit"/>
    </bean>

    <!-- Ativa o controle transacional -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- Ativa a criacao dos repositorios no Spring Data JPA -->
    <jpa:repositories base-package="br.com.daydream"/>

    <!-- Application Message Bundle -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:messages/messages"/>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <!-- Habilita as anotações @Scheduled e @Async -->
    <task:annotation-driven executor="myExecutor" scheduler="myScheduler"/>
    <task:executor id="myExecutor" pool-size="5"/>
    <task:scheduler id="myScheduler" pool-size="10"/>
</beans>